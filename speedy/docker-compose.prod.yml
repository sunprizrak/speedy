version: '3.9'

services:
    web:
        build:
            context: ./
            dockerfile: Dockerfile.prod
        command: gunicorn speedy.wsgi:application --bind 0.0.0.0:8000
        volumes:
            - static_volume:/home/speedy/web/static
            - media_volume:/home/speedy/web/media
        expose:
            - "8000"
        stdin_open: true
        tty: true
        env_file:
            - ./.env.prod
        depends_on:
            - db
    db:
        image: postgres:16rc1-alpine3.18
        stdin_open: true
        tty: true
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        ports:
            - "5433:5432"
        env_file:
            - ./.env.prod.db
    nginx:
        build: ./nginx
        volumes:
            - static_volume:/home/speedy/web/static
            - media_volume:/home/speedy/web/media
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
        ports:
            - "88:80"
            - "444:443"
        stdin_open: true
        tty: true
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
        restart: always
        depends_on:
            - web
    certbot:
        image: certbot/certbot
        restart: unless-stopped
        volumes:
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
        stdin_open: true
        tty: true
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
volumes:
    postgres_data:
    static_volume:
    media_volume: